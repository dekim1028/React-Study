let Koa,Router,bodyParser,mongoose;_c61‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_c61‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_c61‍.w("koa-bodyparser",[["default",["bodyParser"],function(v){bodyParser=v}]]);_c61‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);require('dotenv').config();





const api = require('./api');

//비구조화 할당을 통해 process.env 내부 값에 대한 레퍼런스 만들기
const {PORT,MONGO_URI} = process.env;

mongoose
.connect(MONGO_URI,{useNewUrlParser:true, useFindAndModify:false})
    .then(()=>{
        console.log('Connected to MongoDB');
    })
    .catch(e=>{
        _c61‍.g.console.error(e);
});

const app = new Koa();
const router = new Router();

router.use('/api',api.routes()); //api 라우터 적용

//라우터 적용 전에 bodyParser 적용
app.use(bodyParser());

//app 인스턴스에 라우터 적용
app.use(router.routes()).use(router.allowedMethods());

//PORT가 지정되어 있지 않다면 4000을 사용
const port = PORT || 4000;
app.listen(port,()=>{
    _c61‍.g.console.log('Listening to port %d',port);
})